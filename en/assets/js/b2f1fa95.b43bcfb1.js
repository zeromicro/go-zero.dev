"use strict";(self.webpackChunktmp=self.webpackChunktmp||[]).push([[8495],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return g}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(r),g=o,m=d["".concat(s,".").concat(g)]||d[g]||u[g]||a;return r?n.createElement(m,i(i({ref:t},p),{},{components:r})):n.createElement(m,i({ref:t},p))}));function g(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8783:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return d}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),i=["components"],l={sidebar_position:3},s="Build RPC",c={unversionedId:"build-tool/rpc",id:"build-tool/rpc",title:"Build RPC",description:"goctl rpc is an rpc service code generation module under goctl scaffolding, supporting proto template generation and rpc service code generation, through this tool to generate code you only need to focus on business logic writing without having to write some repetitive code. This allows us to focus on the business, thus speeding up the development efficiency and reducing the error rate of the code.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/build-tool/rpc.md",sourceDirName:"build-tool",slug:"/build-tool/rpc",permalink:"/go-zero.dev/en/docs/build-tool/rpc",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Build API",permalink:"/go-zero.dev/en/docs/build-tool/api"},next:{title:"Build Model",permalink:"/go-zero.dev/en/docs/build-tool/model"}},p=[{value:"Features",id:"features",children:[],level:2},{value:"Quick start",id:"quick-start",children:[{value:"Way 1: Quickly generate greet services",id:"way-1-quickly-generate-greet-services",children:[],level:3},{value:"Way 2: Generate rpc service by specifying proto",id:"way-2-generate-rpc-service-by-specifying-proto",children:[],level:3}],level:2},{value:"Preparation",id:"preparation",children:[],level:2},{value:"Usage",id:"usage",children:[{value:"rpc service generation usage",id:"rpc-service-generation-usage",children:[],level:3},{value:"Parameter description",id:"parameter-description",children:[],level:3},{value:"What developers need to do",id:"what-developers-need-to-do",children:[],level:3},{value:"Caution",id:"caution",children:[],level:3}],level:2},{value:"proto import",id:"proto-import",children:[{value:"error import",id:"error-import",children:[],level:3},{value:"Correctly import",id:"correctly-import",children:[],level:3}],level:2}],u={toc:p};function d(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"build-rpc"},"Build RPC"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"goctl rpc")," is an rpc service code generation module under ",(0,a.kt)("inlineCode",{parentName:"p"},"goctl")," scaffolding, supporting ",(0,a.kt)("inlineCode",{parentName:"p"},"proto")," template generation and ",(0,a.kt)("inlineCode",{parentName:"p"},"rpc")," service code generation, through this tool to generate code you only need to focus on business logic writing without having to write some repetitive code. This allows us to focus on the business, thus speeding up the development efficiency and reducing the error rate of the code."),(0,a.kt)("h2",{id:"features"},"Features"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Easy to use"),(0,a.kt)("li",{parentName:"ul"},"Fast development efficiency"),(0,a.kt)("li",{parentName:"ul"},"Low error rate"),(0,a.kt)("li",{parentName:"ul"},"Close to protoc")),(0,a.kt)("h2",{id:"quick-start"},"Quick start"),(0,a.kt)("h3",{id:"way-1-quickly-generate-greet-services"},"Way 1: Quickly generate greet services"),(0,a.kt)("p",null,"Generated by the command ",(0,a.kt)("inlineCode",{parentName:"p"},"goctl rpc new ${servieName}")),(0,a.kt)("p",null,"If you generate the greet rpc service."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Bash"},"  goctl rpc new greet\n")),(0,a.kt)("p",null,"The code structure after execution is as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},".\n\u251c\u2500\u2500 etc             \n\u2502   \u2514\u2500\u2500 greet.yaml\n\u251c\u2500\u2500 go.mod\n\u251c\u2500\u2500 greet          \n\u2502   \u2514\u2500\u2500 greet.pb.go\n\u251c\u2500\u2500 greet.go       \n\u251c\u2500\u2500 greet.proto    \n\u251c\u2500\u2500 greetclient    \n\u2502   \u2514\u2500\u2500 greet.go\n\u2514\u2500\u2500 internal        \n    \u251c\u2500\u2500 config      \n    \u2502   \u2514\u2500\u2500 config.go\n    \u251c\u2500\u2500 logic     \n    \u2502   \u2514\u2500\u2500 pinglogic.go\n    \u251c\u2500\u2500 server   \n    \u2502   \u2514\u2500\u2500 greetserver.go\n    \u2514\u2500\u2500 svc       \n        \u2514\u2500\u2500 servicecontext.go\n")),(0,a.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"pb folder name (old version of the folder fixed to pb) said to be taken from the value of option go_package in the proto file last level of conversion in a certain format, if there is no such declaration, then the value from package, roughly code as follows."))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="google.golang.org/protobuf@v1.25.0/internal/strs/strings.go:71"',title:'"google.golang.org/protobuf@v1.25.0/internal/strs/strings.go:71"'},"  if option.Name == \"go_package\" {\n    ret.GoPackage = option.Constant.Source\n  }\n  ...\n  if len(ret.GoPackage) == 0 {\n    ret.GoPackage = ret.Package.Name\n  }\n  ret.PbPackage = 'GoSanitized(filepath.Base(ret.GoPackage))'\n  ...\n")),(0,a.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"The name of the call layer folder is taken from the name of the service in the proto. If the name of this sercice is equal to the name of the pb folder, the client will be added after the srervice to distinguish it and make the pb and call separated."))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'if strings.ToLower(proto.Service.Name) == strings.ToLower(proto.GoPackage) {\n    callDir = filepath.Join(ctx.WorkDir, strings.ToLower(stringx.From(proto.Service.Name+"_client").ToCamel()))\n}\n')),(0,a.kt)("h3",{id:"way-2-generate-rpc-service-by-specifying-proto"},"Way 2: Generate rpc service by specifying proto"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Generate proto template")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Bash"},"  goctl rpc template -o=user.proto\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="user.proto"',title:'"user.proto"'},'syntax = "proto3";\n\npackage remote;\n\noption go_package = "remote";\n\nmessage Request {\n  // \u7528\u6237\u540d\n  string username = 1;\n  // \u7528\u6237\u5bc6\u7801\n  string password = 2;\n}\n\nmessage Response {\n  // \u7528\u6237\u540d\u79f0\n  string name = 1;\n  // \u7528\u6237\u6027\u522b\n  string gender = 2;\n}\n\nservice User {\n  // \u767b\u5f55\n  rpc Login(Request)returns(Response);\n}\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Generate rpc service code"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-Bash"}," goctl rpc proto -src user.proto -dir .\n")))),(0,a.kt)("h2",{id:"preparation"},"Preparation"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Go environment is installed"),(0,a.kt)("li",{parentName:"ul"},"protoc & protoc-gen-go are installed and environment variables are set"),(0,a.kt)("li",{parentName:"ul"},"For more questions, see ",(0,a.kt)("a",{href:"#Notes"},"Notes"))),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("h3",{id:"rpc-service-generation-usage"},"rpc service generation usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Bash"},"goctl rpc proto -h\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Bash"},"NAME:\n   goctl rpc proto - generate rpc from proto\n\nUSAGE:\n   goctl rpc proto [command options] [arguments...]\n\nOPTIONS:\n   --src value, -s value         the file path of the proto source file\n   --proto_path value, -I value  native command of protoc, specify the directory in which to search for imports. [optional]\n   --dir value, -d value         the target path of the code\n   --style value                 the file naming format, see [https://github.com/zeromicro/go-zero/tree/master/tools/goctl/config/readme.md]\n   --idea                        whether the command execution environment is from idea plugin. [optional]\n")),(0,a.kt)("h3",{id:"parameter-description"},"Parameter description"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"--src mandatory, proto data source, currently supports single proto file generation"),(0,a.kt)("li",{parentName:"ul"},"--proto_path Optional, a native subcommand of protoc, used to specify where to look for proto import, multiple paths can be specified, e.g. ",(0,a.kt)("inlineCode",{parentName:"li"},"goctl rpc -I={path1} -I={path2} ... ', which can be left out when there is no import. You don't need to specify the current proto path, it's already built-in, please refer to "),"protoc -h",(0,a.kt)("inlineCode",{parentName:"li"},"for the detailed usage of"),"-I`."),(0,a.kt)("li",{parentName:"ul"},"--dir optional, default is the directory where the proto file is located, the target directory of the generated code."),(0,a.kt)("li",{parentName:"ul"},"--style optional, the output directory file naming style, see ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/zeromicro/go-zero/tree/master/tools/goctl/config/readme.md"},"https://github.com/zeromicro/go-zero/tree/master/tools/goctl/config/readme.md")," for details."),(0,a.kt)("li",{parentName:"ul"},"--idea optional, whether to execute in the idea plugin, terminal execution can be ignored")),(0,a.kt)("h3",{id:"what-developers-need-to-do"},"What developers need to do"),(0,a.kt)("p",null,"Focus on business code writing, leave the repetitive, non-business related work to goctl, after generating good rpc service code, developers only need to modify"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"write configuration files in the service (etc/xx.json, internal/config/config.go)"),(0,a.kt)("li",{parentName:"ul"},"Business logic writing in the service (internal/logic/xxlogic.go)"),(0,a.kt)("li",{parentName:"ul"},"Writing of resource context in the service (internal/svc/servicecontext.go)")),(0,a.kt)("h3",{id:"caution"},"Caution"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"proto does not support simultaneous generation of multiple files at the moment."),(0,a.kt)("li",{parentName:"ul"},"proto does not support external dependency package introduction, message does not support inline"),(0,a.kt)("li",{parentName:"ul"},"Currently main file, shared file, handler file will be forced to overwrite, and developers need to write manually will not overwrite the generation, this category in the code header are")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"  // Code generated by goctl. DO NOT EDIT!\n  // Source: xxx.proto\n")),(0,a.kt)("p",null," Please be careful not to write business-like code in it as well."),(0,a.kt)("h2",{id:"proto-import"},"proto import"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"For requestType and returnType in rpc must be defined in main proto file, for message in proto can import other proto files like protoc.")),(0,a.kt)("h3",{id:"error-import"},"error import"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:'title="greet.proto"',title:'"greet.proto"'},'syntax = "proto3";\n\npackage greet;\n\noption go_package = "greet";\n\nimport "base/common.proto"\n\nmessage Request {\n  string ping = 1;\n}\n\nmessage Response {\n  string pong = 1;\n}\n\nservice Greet {\n  rpc Ping(base.In) returns(base.Out);// request\u548creturn \u4e0d\u652f\u6301import\n}\n\n')),(0,a.kt)("h3",{id:"correctly-import"},"Correctly import"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:'title="greet.proto"',title:'"greet.proto"'},'syntax = "proto3";\n\npackage greet;\n\noption go_package =  "greet";\n\nimport "base/common.proto"\n\nmessage Request {\n  base.In in = 1;// \u652f\u6301import\n}\n\nmessage Response {\n base.Out out = 2;// \u652f\u6301import\n}\n\nservice Greet {\n  rpc Ping(Request) returns(Response);\n}\n')))}d.isMDXComponent=!0}}]);